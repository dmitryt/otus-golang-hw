docker-compose -f deployments/docker-compose.yml up -d --build && \
	API_HOST=http://localhost:8888 ginkgo ./integration-tests && \
	docker-compose -f deployments/docker-compose.yml down
Step 1/8 : FROM golang:1.14-alpine
 ---> 0223ac8ea40d
Step 2/8 : RUN apk update
 ---> Using cache
 ---> 939d8313abf6
Step 3/8 : ENV GO111MODULE=on     CGO_ENABLED=0     GOOS=linux
 ---> Using cache
 ---> 64eb44d83ba8
Step 4/8 : WORKDIR /build
 ---> Using cache
 ---> 87b7c58f74fe
Step 5/8 : RUN go get 'github.com/pressly/goose/cmd/goose'
 ---> Using cache
 ---> 37c8932f986d
Step 6/8 : RUN mkdir -p /opt/db
 ---> Using cache
 ---> 709d7c2c4467
Step 7/8 : COPY ./migrations /opt/db/migrations
 ---> Using cache
 ---> fce54de0a0d6
Step 8/8 : ENTRYPOINT /go/bin/goose -v -dir /opt/db/migrations postgres "host=$DB_HOST port=$DB_PORT user=$DB_USER password=$DB_PASSWORD dbname=$DB_NAME sslmode=disable" up
 ---> Using cache
 ---> 2a8b144dc191

Successfully built 2a8b144dc191
Successfully tagged deployments_migrator:latest
Step 1/3 : FROM rabbitmq:3-management
 ---> 9dd69c24b09f
Step 2/3 : RUN apt-get update
 ---> Using cache
 ---> 43f3b584ba90
Step 3/3 : RUN apt-get install -y netcat
 ---> Using cache
 ---> 4dedbc3ea806

Successfully built 4dedbc3ea806
Successfully tagged deployments_queue:latest
Step 1/14 : FROM golang:1.14-alpine AS builder
 ---> 0223ac8ea40d
Step 2/14 : RUN apk update
 ---> Using cache
 ---> 939d8313abf6
Step 3/14 : ENV GO111MODULE=on     CGO_ENABLED=0     GOOS=linux
 ---> Using cache
 ---> 64eb44d83ba8
Step 4/14 : WORKDIR /build
 ---> Using cache
 ---> 87b7c58f74fe
Step 5/14 : COPY go.mod go.sum ./
 ---> Using cache
 ---> 1695e50752d5
Step 6/14 : RUN go mod download
 ---> Using cache
 ---> f2f881fd4fdb
Step 7/14 : COPY . .
 ---> e55eb0908cde
Step 8/14 : ARG MAIN_FILE_PATH
 ---> Running in 9f14e3803cf2
Removing intermediate container 9f14e3803cf2
 ---> f930a425e3b3
Step 9/14 : RUN go build -o main $MAIN_FILE_PATH
 ---> Running in 55d1350fe5c7
Removing intermediate container 55d1350fe5c7
 ---> ebb1e38b5aff
Step 10/14 : RUN chmod +x main
 ---> Running in dfdba8581174
Removing intermediate container dfdba8581174
 ---> 74593cba1344

Step 11/14 : FROM scratch
 ---> 
Step 12/14 : COPY --from=builder /build/main /
 ---> Using cache
 ---> 2fac9a18f714
Step 13/14 : EXPOSE 8081
 ---> Using cache
 ---> 9a23c2b2318e
Step 14/14 : ENTRYPOINT ["/main"]
 ---> Using cache
 ---> a988a0f8f1f9

Successfully built a988a0f8f1f9
Successfully tagged deployments_calendar:latest
Step 1/14 : FROM golang:1.14-alpine AS builder
 ---> 0223ac8ea40d
Step 2/14 : RUN apk update
 ---> Using cache
 ---> 939d8313abf6
Step 3/14 : ENV GO111MODULE=on     CGO_ENABLED=0     GOOS=linux
 ---> Using cache
 ---> 64eb44d83ba8
Step 4/14 : WORKDIR /build
 ---> Using cache
 ---> 87b7c58f74fe
Step 5/14 : COPY go.mod go.sum ./
 ---> Using cache
 ---> 1695e50752d5
Step 6/14 : RUN go mod download
 ---> Using cache
 ---> f2f881fd4fdb
Step 7/14 : COPY . .
 ---> 2825fe9f9822
Step 8/14 : ARG MAIN_FILE_PATH
 ---> Running in 38b5cd118b5a
Removing intermediate container 38b5cd118b5a
 ---> 6e195a637345
Step 9/14 : RUN go build -o main $MAIN_FILE_PATH
 ---> Running in b044cf97ed1a
Removing intermediate container b044cf97ed1a
 ---> 2f79776ae929
Step 10/14 : RUN chmod +x main
 ---> Running in cb3849850f78
Removing intermediate container cb3849850f78
 ---> b9cc19548077

Step 11/14 : FROM scratch
 ---> 
Step 12/14 : COPY --from=builder /build/main /
 ---> Using cache
 ---> e20e97826935
Step 13/14 : EXPOSE 8081
 ---> Using cache
 ---> dcd21bfb36cc
Step 14/14 : ENTRYPOINT ["/main"]
 ---> Using cache
 ---> e8c54c1c3744

Successfully built e8c54c1c3744
Successfully tagged deployments_calendar_scheduler:latest
Step 1/14 : FROM golang:1.14-alpine AS builder
 ---> 0223ac8ea40d
Step 2/14 : RUN apk update
 ---> Using cache
 ---> 939d8313abf6
Step 3/14 : ENV GO111MODULE=on     CGO_ENABLED=0     GOOS=linux
 ---> Using cache
 ---> 64eb44d83ba8
Step 4/14 : WORKDIR /build
 ---> Using cache
 ---> 87b7c58f74fe
Step 5/14 : COPY go.mod go.sum ./
 ---> Using cache
 ---> 1695e50752d5
Step 6/14 : RUN go mod download
 ---> Using cache
 ---> f2f881fd4fdb
Step 7/14 : COPY . .
 ---> 0b632b8b2b1d
Step 8/14 : ARG MAIN_FILE_PATH
 ---> Running in 6c19e6b41c64
Removing intermediate container 6c19e6b41c64
 ---> 38dd545c8936
Step 9/14 : RUN go build -o main $MAIN_FILE_PATH
 ---> Running in a87c83becfca
Removing intermediate container a87c83becfca
 ---> 5bdf3d96a4a6
Step 10/14 : RUN chmod +x main
 ---> Running in cab719bc7494
Removing intermediate container cab719bc7494
 ---> f774a1eb2ed1

Step 11/14 : FROM scratch
 ---> 
Step 12/14 : COPY --from=builder /build/main /
 ---> Using cache
 ---> 7006fab2c329
Step 13/14 : EXPOSE 8081
 ---> Using cache
 ---> b64dfa29f5bf
Step 14/14 : ENTRYPOINT ["/main"]
 ---> Using cache
 ---> 574afba64b53

Successfully built 574afba64b53
Successfully tagged deployments_calendar_sender:latest
Running Suite: Tests Suite
==========================
Random Seed: [1m1600037016[0m
Will run [1m8[0m of [1m8[0m specs

[32mâ€¢ [SLOW TEST:10.025 seconds][0m
Sender
[90m/Users/gremlin/education/otus/golang/otus-go/otus-golang-hw/hw12_13_14_15_calendar/integration-tests/sender_test.go:12[0m
  Event
  [90m/Users/gremlin/education/otus/golang/otus-go/otus-golang-hw/hw12_13_14_15_calendar/integration-tests/sender_test.go:13[0m
    should receive event
    [90m/Users/gremlin/education/otus/golang/otus-go/otus-golang-hw/hw12_13_14_15_calendar/integration-tests/sender_test.go:14[0m
[90m------------------------------[0m
[32mâ€¢[0m[32mâ€¢[0m[32mâ€¢[0m[32mâ€¢[0m[32mâ€¢[0m[32mâ€¢[0m[32mâ€¢[0m
[1m[32mRan 8 of 8 Specs in 10.184 seconds[0m
[1m[32mSUCCESS![0m -- [32m[1m8 Passed[0m | [91m[1m0 Failed[0m | [33m[1m0 Pending[0m | [36m[1m0 Skipped[0m
PASS

Ginkgo ran 1 suite in 11.667739329s
Test Suite Passed
